/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  SaleToken,
  SaleTokenInterface,
} from "../../../contracts/SaleNFT.sol/SaleToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "BuyToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "buy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract CANNANFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610aa6380380610aa683398181016040528101906100329190610223565b33600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a55760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009c919061025f565b60405180910390fd5b6100b4816100fc60201b60201c565b5080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061027a565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101f0826101c5565b9050919050565b610200816101e5565b811461020b57600080fd5b50565b60008151905061021d816101f7565b92915050565b600060208284031215610239576102386101c0565b5b60006102478482850161020e565b91505092915050565b610259816101e5565b82525050565b60006020820190506102746000830184610250565b92915050565b61081d806102896000396000f3fe60806040526004361061007b5760003560e01c8063a6f2ae3a1161004e578063a6f2ae3a14610116578063e07fa3c114610120578063f2fde38b14610137578063fc0c546a146101605761007b565b8063715018a6146100805780638da5cb5b1461009757806391b7f5ed146100c2578063a035b1fe146100eb575b600080fd5b34801561008c57600080fd5b5061009561018b565b005b3480156100a357600080fd5b506100ac61019f565b6040516100b991906105a8565b60405180910390f35b3480156100ce57600080fd5b506100e960048036038101906100e491906105fe565b6101c8565b005b3480156100f757600080fd5b506101006101da565b60405161010d919061063a565b60405180910390f35b61011e6101e0565b005b34801561012c57600080fd5b50610135610317565b005b34801561014357600080fd5b5061015e60048036038101906101599190610681565b610368565b005b34801561016c57600080fd5b506101756103ee565b604051610182919061070d565b60405180910390f35b610193610414565b61019d600061049b565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6101d0610414565b8060028190555050565b60025481565b6002543414610224576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021b90610785565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354ba0f27336040518263ffffffff1660e01b815260040161028191906105a8565b6020604051808303816000875af11580156102a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c491906107ba565b90503373ffffffffffffffffffffffffffffffffffffffff167fdd06b66c3ba8126086cd863137d6f3b86ce5bcf4309cac390cc265e39194d0b28260405161030c919061063a565b60405180910390a250565b61031f610414565b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610365573d6000803e3d6000fd5b50565b610370610414565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036103e25760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016103d991906105a8565b60405180910390fd5b6103eb8161049b565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61041c61055f565b73ffffffffffffffffffffffffffffffffffffffff1661043a61019f565b73ffffffffffffffffffffffffffffffffffffffff16146104995761045d61055f565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161049091906105a8565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061059282610567565b9050919050565b6105a281610587565b82525050565b60006020820190506105bd6000830184610599565b92915050565b600080fd5b6000819050919050565b6105db816105c8565b81146105e657600080fd5b50565b6000813590506105f8816105d2565b92915050565b600060208284031215610614576106136105c3565b5b6000610622848285016105e9565b91505092915050565b610634816105c8565b82525050565b600060208201905061064f600083018461062b565b92915050565b61065e81610587565b811461066957600080fd5b50565b60008135905061067b81610655565b92915050565b600060208284031215610697576106966105c3565b5b60006106a58482850161066c565b91505092915050565b6000819050919050565b60006106d36106ce6106c984610567565b6106ae565b610567565b9050919050565b60006106e5826106b8565b9050919050565b60006106f7826106da565b9050919050565b610707816106ec565b82525050565b600060208201905061072260008301846106fe565b92915050565b600082825260208201905092915050565b7f5072696365206e6f742065786163746c79000000000000000000000000000000600082015250565b600061076f601183610728565b915061077a82610739565b602082019050919050565b6000602082019050818103600083015261079e81610762565b9050919050565b6000815190506107b4816105d2565b92915050565b6000602082840312156107d0576107cf6105c3565b5b60006107de848285016107a5565b9150509291505056fea2646970667358221220c27c8a695e49c7a8439b950cd431edab3439a37ef123db2376506fad40286dfb64736f6c63430008180033";

type SaleTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SaleTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SaleToken__factory extends ContractFactory {
  constructor(...args: SaleTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _token: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_token, overrides || {});
  }
  override deploy(
    _token: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_token, overrides || {}) as Promise<
      SaleToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SaleToken__factory {
    return super.connect(runner) as SaleToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SaleTokenInterface {
    return new Interface(_abi) as SaleTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): SaleToken {
    return new Contract(address, _abi, runner) as unknown as SaleToken;
  }
}
