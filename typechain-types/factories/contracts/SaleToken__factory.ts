/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { SaleToken, SaleTokenInterface } from "../../contracts/SaleToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "BuyToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "buy",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getRemainingToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "getTokenCanBuy",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenSale",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalTokenSale",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000ff538038062000ff5833981810160405281019062000037919062000235565b33600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a4919062000278565b60405180910390fd5b620000be816200010760201b60201c565b5080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000295565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001fd82620001d0565b9050919050565b6200020f81620001f0565b81146200021b57600080fd5b50565b6000815190506200022f8162000204565b92915050565b6000602082840312156200024e576200024d620001cb565b5b60006200025e848285016200021e565b91505092915050565b6200027281620001f0565b82525050565b60006020820190506200028f600083018462000267565b92915050565b610d5080620002a56000396000f3fe6080604052600436106100a75760003560e01c8063a6f2ae3a11610064578063a6f2ae3a14610198578063b702fccc146101a2578063b9420310146101df578063e07fa3c11461020a578063f2fde38b14610221578063fc0c546a1461024a576100a7565b806324645c5a146100ac5780633efe6441146100d7578063715018a6146101025780638da5cb5b1461011957806391b7f5ed14610144578063a035b1fe1461016d575b600080fd5b3480156100b857600080fd5b506100c1610275565b6040516100ce9190610923565b60405180910390f35b3480156100e357600080fd5b506100ec61027b565b6040516100f99190610923565b60405180910390f35b34801561010e57600080fd5b50610117610292565b005b34801561012557600080fd5b5061012e6102a6565b60405161013b919061097f565b60405180910390f35b34801561015057600080fd5b5061016b600480360381019061016691906109cb565b6102cf565b005b34801561017957600080fd5b506101826102e1565b60405161018f9190610923565b60405180910390f35b6101a06102e7565b005b3480156101ae57600080fd5b506101c960048036038101906101c491906109cb565b6103ab565b6040516101d69190610923565b60405180910390f35b3480156101eb57600080fd5b506101f46103bd565b6040516102019190610923565b60405180910390f35b34801561021657600080fd5b5061021f6103c3565b005b34801561022d57600080fd5b5061024860048036038101906102439190610a24565b610414565b005b34801561025657600080fd5b5061025f61049a565b60405161026c9190610ab0565b60405180910390f35b60035481565b600060045460035461028d9190610afa565b905090565b61029a6104c0565b6102a46000610547565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6102d76104c0565b8060028190555050565b60025481565b60006102f23461060b565b90506103413382600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166106359092919063ffffffff16565b80600460008282546103539190610b2e565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167fdd06b66c3ba8126086cd863137d6f3b86ce5bcf4309cac390cc265e39194d0b2826040516103a09190610923565b60405180910390a250565b60006103b68261060b565b9050919050565b60045481565b6103cb6104c0565b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610411573d6000803e3d6000fd5b50565b61041c6104c0565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361048e5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610485919061097f565b60405180910390fd5b61049781610547565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6104c86106b4565b73ffffffffffffffffffffffffffffffffffffffff166104e66102a6565b73ffffffffffffffffffffffffffffffffffffffff1614610545576105096106b4565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161053c919061097f565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000600254670de0b6b3a7640000836106249190610b62565b61062e9190610bd3565b9050919050565b6106af838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610668929190610c04565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506106bc565b505050565b600033905090565b60006106e7828473ffffffffffffffffffffffffffffffffffffffff1661075390919063ffffffff16565b9050600081511415801561070c57508080602001905181019061070a9190610c65565b155b1561074e57826040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610745919061097f565b60405180910390fd5b505050565b606061076183836000610769565b905092915050565b6060814710156107b057306040517fcd7860590000000000000000000000000000000000000000000000000000000081526004016107a7919061097f565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff1684866040516107d99190610d03565b60006040518083038185875af1925050503d8060008114610816576040519150601f19603f3d011682016040523d82523d6000602084013e61081b565b606091505b509150915061082b868383610836565b925050509392505050565b60608261084b57610846826108c5565b6108bd565b60008251148015610873575060008473ffffffffffffffffffffffffffffffffffffffff163b145b156108b557836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016108ac919061097f565b60405180910390fd5b8190506108be565b5b9392505050565b6000815111156108d85780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000819050919050565b61091d8161090a565b82525050565b60006020820190506109386000830184610914565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109698261093e565b9050919050565b6109798161095e565b82525050565b60006020820190506109946000830184610970565b92915050565b600080fd5b6109a88161090a565b81146109b357600080fd5b50565b6000813590506109c58161099f565b92915050565b6000602082840312156109e1576109e061099a565b5b60006109ef848285016109b6565b91505092915050565b610a018161095e565b8114610a0c57600080fd5b50565b600081359050610a1e816109f8565b92915050565b600060208284031215610a3a57610a3961099a565b5b6000610a4884828501610a0f565b91505092915050565b6000819050919050565b6000610a76610a71610a6c8461093e565b610a51565b61093e565b9050919050565b6000610a8882610a5b565b9050919050565b6000610a9a82610a7d565b9050919050565b610aaa81610a8f565b82525050565b6000602082019050610ac56000830184610aa1565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b058261090a565b9150610b108361090a565b9250828203905081811115610b2857610b27610acb565b5b92915050565b6000610b398261090a565b9150610b448361090a565b9250828201905080821115610b5c57610b5b610acb565b5b92915050565b6000610b6d8261090a565b9150610b788361090a565b9250828202610b868161090a565b91508282048414831517610b9d57610b9c610acb565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610bde8261090a565b9150610be98361090a565b925082610bf957610bf8610ba4565b5b828204905092915050565b6000604082019050610c196000830185610970565b610c266020830184610914565b9392505050565b60008115159050919050565b610c4281610c2d565b8114610c4d57600080fd5b50565b600081519050610c5f81610c39565b92915050565b600060208284031215610c7b57610c7a61099a565b5b6000610c8984828501610c50565b91505092915050565b600081519050919050565b600081905092915050565b60005b83811015610cc6578082015181840152602081019050610cab565b60008484015250505050565b6000610cdd82610c92565b610ce78185610c9d565b9350610cf7818560208601610ca8565b80840191505092915050565b6000610d0f8284610cd2565b91508190509291505056fea2646970667358221220ca1ef298f77cd09c129e79f9f2601c8a2fc3f3ed59688b51991bada23a6aeadb64736f6c63430008180033";

type SaleTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SaleTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SaleToken__factory extends ContractFactory {
  constructor(...args: SaleTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _token: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_token, overrides || {});
  }
  override deploy(
    _token: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_token, overrides || {}) as Promise<
      SaleToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SaleToken__factory {
    return super.connect(runner) as SaleToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SaleTokenInterface {
    return new Interface(_abi) as SaleTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): SaleToken {
    return new Contract(address, _abi, runner) as unknown as SaleToken;
  }
}
